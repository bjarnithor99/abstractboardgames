players = white, black;

pieces = empty, bRook(black), bKnight(black), bBishop(black), bQueen(black), bKing(black), bPawn(black),
                wRook(white), wKnight(white), wBishop(white), wQueen(white), wKing(white), wPawn(white);

rule bRook   = [-1,  0, empty]+ | [-1,  0, empty]*[-1,  0, opponent] |
               [ 1,  0, empty]+ | [ 1,  0, empty]*[ 1,  0, opponent] |
               [ 0, -1, empty]+ | [ 0, -1, empty]*[-1, -1, opponent] |
               [ 0,  1, empty]+ | [ 0,  1, empty]*[-1,  1, opponent];
rule bKnight = [-1,  2, empty] | [-1,  2, opponent] |
               [ 1,  2, empty] | [ 1,  2, opponent] |
               [ 2,  1, empty] | [ 2,  1, opponent] |
               [ 2, -1, empty] | [ 2, -1, opponent] |
               [ 1, -2, empty] | [ 1, -2, opponent] |
               [-1, -2, empty] | [-1, -2, opponent] |
               [-2, -1, empty] | [-2, -1, opponent] |
               [-2,  1, empty] | [-2,  1, opponent];
rule bBishop = [ 1,  1, empty]+ | [ 1,  1, empty]*[ 1,  1, opponent] |
               [ 1, -1, empty]+ | [ 1, -1, empty]*[ 1, -1, opponent] |
               [-1,  1, empty]+ | [-1,  1, empty]*[-1,  1, opponent] |
               [-1, -1, empty]+ | [-1, -1, empty]*[-1, -1, opponent];
rule bQueen  = [ 1,  1, empty]+ | [ 1,  1, empty]*[ 1,  1, opponent] |
               [ 1, -1, empty]+ | [ 1, -1, empty]*[ 1, -1, opponent] |
               [-1,  1, empty]+ | [-1,  1, empty]*[-1,  1, opponent] |
               [-1, -1, empty]+ | [-1, -1, empty]*[-1, -1, opponent] |
               [-1,  0, empty]+ | [-1,  0, empty]*[-1,  0, opponent] |
               [ 1,  0, empty]+ | [ 1,  0, empty]*[ 1,  0, opponent] |
               [ 0, -1, empty]+ | [ 0, -1, empty]*[-1, -1, opponent] |
               [ 0,  1, empty]+ | [ 0,  1, empty]*[-1,  1, opponent];
rule bKing   = [ 1,  1, empty] | [ 1,  1, opponent] |
               [ 1, -1, empty] | [ 1, -1, opponent] |
               [-1,  1, empty] | [-1,  1, opponent] |
               [-1, -1, empty] | [-1, -1, opponent] |
               [-1,  0, empty] | [-1,  0, opponent] |
               [ 1,  0, empty] | [ 1,  0, opponent] |
               [ 0, -1, empty] | [-1, -1, opponent] |
               [ 0,  1, empty] | [-1,  1, opponent];
rule bPawn   = [ 0, -1, empty] |
               [-1, -1, opponent] | [ 1, -1, opponent];
rule wRook   = [-1,  0, empty]+ | [-1,  0, empty]*[-1,  0, opponent] |
               [ 1,  0, empty]+ | [ 1,  0, empty]*[ 1,  0, opponent] |
               [ 0, -1, empty]+ | [ 0, -1, empty]*[-1, -1, opponent] |
               [ 0,  1, empty]+ | [ 0,  1, empty]*[-1,  1, opponent];
rule wKnight = [-1,  2, empty] | [-1,  2, opponent] |
               [ 1,  2, empty] | [ 1,  2, opponent] |
               [ 2,  1, empty] | [ 2,  1, opponent] |
               [ 2, -1, empty] | [ 2, -1, opponent] |
               [ 1, -2, empty] | [ 1, -2, opponent] |
               [-1, -2, empty] | [-1, -2, opponent] |
               [-2, -1, empty] | [-2, -1, opponent] |
               [-2,  1, empty] | [-2,  1, opponent];
rule wBishop = [ 1,  1, empty]+ | [ 1,  1, empty]*[ 1,  1, opponent] |
               [ 1, -1, empty]+ | [ 1, -1, empty]*[ 1, -1, opponent] |
               [-1,  1, empty]+ | [-1,  1, empty]*[-1,  1, opponent] |
               [-1, -1, empty]+ | [-1, -1, empty]*[-1, -1, opponent];
rule wQueen  = [ 1,  1, empty]+ | [ 1,  1, empty]*[ 1,  1, opponent] |
               [ 1, -1, empty]+ | [ 1, -1, empty]*[ 1, -1, opponent] |
               [-1,  1, empty]+ | [-1,  1, empty]*[-1,  1, opponent] |
               [-1, -1, empty]+ | [-1, -1, empty]*[-1, -1, opponent] |
               [-1,  0, empty]+ | [-1,  0, empty]*[-1,  0, opponent] |
               [ 1,  0, empty]+ | [ 1,  0, empty]*[ 1,  0, opponent] |
               [ 0, -1, empty]+ | [ 0, -1, empty]*[-1, -1, opponent] |
               [ 0,  1, empty]+ | [ 0,  1, empty]*[-1,  1, opponent];
rule wKing   = [ 1,  1, empty] | [ 1,  1, opponent] |
               [ 1, -1, empty] | [ 1, -1, opponent] |
               [-1,  1, empty] | [-1,  1, opponent] |
               [-1, -1, empty] | [-1, -1, opponent] |
               [-1,  0, empty] | [-1,  0, opponent] |
               [ 1,  0, empty] | [ 1,  0, opponent] |
               [ 0, -1, empty] | [-1, -1, opponent] |
               [ 0,  1, empty] | [-1,  1, opponent];
rule wPawn   = [ 0,  1, empty] |
               [-1,  1, opponent] | [ 1,  1, opponent];

post black bKing = [-1, -1, wpawn]   | [ 1, -1, wpawn] |
                   [-1, -2, wknight] | [ 1, -2, wknight] |
                   [ 2, -1, wknight] | [ 2,  1, wknight] |
                   [ 1,  2, wknight] | [-1,  2, wknight] |
                   [-2,  1, wknight] | [-2, -1, wknight] |
                   [ 1,  1, empty]*[ 1,  1, wbishop] |
                   [ 1, -1, empty]*[ 1, -1, wbishop] |
                   [-1, -1, empty]*[-1, -1, wbishop] |
                   [-1,  1, empty]*[-1,  1, wbishop] |
                   [ 1,  0, empty]*[ 1,  0, wrook] |
                   [ 0, -1, empty]*[ 0, -1, wrook] |
                   [-1,  0, empty]*[-1,  0, wrook] |
                   [ 0,  1, empty]*[ 0,  1, wrook] |
                   [ 1,  1, empty]*[ 1,  1, wqueen] |
                   [ 1, -1, empty]*[ 1, -1, wqueen] |
                   [-1, -1, empty]*[-1, -1, wqueen] |
                   [-1,  1, empty]*[-1,  1, wqueen] |
                   [ 1,  0, empty]*[ 1,  0, wqueen] |
                   [ 0, -1, empty]*[ 0, -1, wqueen] |
                   [-1,  0, empty]*[-1,  0, wqueen] |
                   [ 0,  1, empty]*[ 0,  1, wqueen] |
                   [ 1,  1, wking] | [ 1, -1, wking] |
                   [-1, -1, wking] | [-1,  1, wking] |
                   [ 1,  0, wking] | [ 0, -1, wking] |
                   [-1,  0, wking] | [ 0,  1, wking];

post black wKing = [-1,  1, bpawn]   | [ 1,  1, bpawn] |
                   [-1, -2, bknight] | [ 1, -2, bknight] |
                   [ 2, -1, bknight] | [ 2,  1, bknight] |
                   [ 1,  2, bknight] | [-1,  2, bknight] |
                   [-2,  1, bknight] | [-2, -1, bknight] |
                   [ 1,  1, empty]*[ 1,  1, bbishop] |
                   [ 1, -1, empty]*[ 1, -1, bbishop] |
                   [-1, -1, empty]*[-1, -1, bbishop] |
                   [-1,  1, empty]*[-1,  1, bbishop] |
                   [ 1,  0, empty]*[ 1,  0, brook] |
                   [ 0, -1, empty]*[ 0, -1, brook] |
                   [-1,  0, empty]*[-1,  0, brook] |
                   [ 0,  1, empty]*[ 0,  1, brook] |
                   [ 1,  1, empty]*[ 1,  1, bqueen] |
                   [ 1, -1, empty]*[ 1, -1, bqueen] |
                   [-1, -1, empty]*[-1, -1, bqueen] |
                   [-1,  1, empty]*[-1,  1, bqueen] |
                   [ 1,  0, empty]*[ 1,  0, bqueen] |
                   [ 0, -1, empty]*[ 0, -1, bqueen] |
                   [-1,  0, empty]*[-1,  0, bqueen] |
                   [ 0,  1, empty]*[ 0,  1, bqueen] |
                   [ 1,  1, bking] | [ 1, -1, bking] |
                   [-1, -1, bking] | [-1,  1, bking] |
                   [ 1,  0, bking] | [ 0, -1, bking] |
                   [-1,  0, bking] | [ 0,  1, bking];

board_size = 8, 8;
board = bRook, bKnight, bBishop, bQueen, bKing, bBishop, bKnight, bRook,
        bPawn, bPawn,   bPawn,   bPawn,  bPawn, bPawn,   bPawn,   bPawn,
        empty, empty,   empty,   empty,  empty, empty,   empty,   empty,
        empty, empty,   empty,   empty,  empty, empty,   empty,   empty,
        empty, empty,   empty,   empty,  empty, empty,   empty,   empty,
        empty, empty,   empty,   empty,  empty, empty,   empty,   empty,
        wPawn, wPawn,   wPawn,   wPawn,  wPawn, wPawn,   wPawn,   wPawn,
        wRook, wKnight, wBishop, wQueen, wKing, wBishop, wKnight, wRook;
